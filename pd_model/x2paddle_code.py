import paddle
import math
from x2paddle.op_mapper.onnx2paddle import onnx_custom_layer as x2paddle_nn

class ONNXModel(paddle.nn.Layer):
    def __init__(self):
        super(ONNXModel, self).__init__()
        self.conv0 = paddle.nn.Conv2D(in_channels=1, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu0 = paddle.nn.ReLU()
        self.conv1 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu1 = paddle.nn.ReLU()
        self.conv2 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu2 = paddle.nn.ReLU()
        self.conv3 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu3 = paddle.nn.ReLU()
        self.conv4 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu4 = paddle.nn.ReLU()
        self.conv5 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu5 = paddle.nn.ReLU()
        self.conv6 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu6 = paddle.nn.ReLU()
        self.conv7 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu7 = paddle.nn.ReLU()
        self.conv8 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu8 = paddle.nn.ReLU()
        self.conv9 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu9 = paddle.nn.ReLU()
        self.conv10 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu10 = paddle.nn.ReLU()
        self.conv11 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu11 = paddle.nn.ReLU()
        self.conv12 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu12 = paddle.nn.ReLU()
        self.conv13 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu13 = paddle.nn.ReLU()
        self.conv14 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu14 = paddle.nn.ReLU()
        self.conv15 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu15 = paddle.nn.ReLU()
        self.conv16 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu16 = paddle.nn.ReLU()
        self.conv17 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu17 = paddle.nn.ReLU()
        self.conv18 = paddle.nn.Conv2D(in_channels=64, out_channels=64, kernel_size=[3, 3], padding=1, bias_attr=False)
        self.relu18 = paddle.nn.ReLU()
        self.conv19 = paddle.nn.Conv2D(in_channels=64, out_channels=1, kernel_size=[3, 3], padding=1, bias_attr=False)

    def forward(self, x2paddle_input):
        x2paddle__conv1_conv1_0_Conv_output_0 = self.conv0(x2paddle_input)
        x2paddle__conv1_conv1_1_Relu_output_0 = self.relu0(x2paddle__conv1_conv1_0_Conv_output_0)
        x2paddle__trunk_trunk_0_conv_Conv_output_0 = self.conv1(x2paddle__conv1_conv1_1_Relu_output_0)
        x2paddle__trunk_trunk_0_relu_Relu_output_0 = self.relu1(x2paddle__trunk_trunk_0_conv_Conv_output_0)
        x2paddle__trunk_trunk_1_conv_Conv_output_0 = self.conv2(x2paddle__trunk_trunk_0_relu_Relu_output_0)
        x2paddle__trunk_trunk_1_relu_Relu_output_0 = self.relu2(x2paddle__trunk_trunk_1_conv_Conv_output_0)
        x2paddle__trunk_trunk_2_conv_Conv_output_0 = self.conv3(x2paddle__trunk_trunk_1_relu_Relu_output_0)
        x2paddle__trunk_trunk_2_relu_Relu_output_0 = self.relu3(x2paddle__trunk_trunk_2_conv_Conv_output_0)
        x2paddle__trunk_trunk_3_conv_Conv_output_0 = self.conv4(x2paddle__trunk_trunk_2_relu_Relu_output_0)
        x2paddle__trunk_trunk_3_relu_Relu_output_0 = self.relu4(x2paddle__trunk_trunk_3_conv_Conv_output_0)
        x2paddle__trunk_trunk_4_conv_Conv_output_0 = self.conv5(x2paddle__trunk_trunk_3_relu_Relu_output_0)
        x2paddle__trunk_trunk_4_relu_Relu_output_0 = self.relu5(x2paddle__trunk_trunk_4_conv_Conv_output_0)
        x2paddle__trunk_trunk_5_conv_Conv_output_0 = self.conv6(x2paddle__trunk_trunk_4_relu_Relu_output_0)
        x2paddle__trunk_trunk_5_relu_Relu_output_0 = self.relu6(x2paddle__trunk_trunk_5_conv_Conv_output_0)
        x2paddle__trunk_trunk_6_conv_Conv_output_0 = self.conv7(x2paddle__trunk_trunk_5_relu_Relu_output_0)
        x2paddle__trunk_trunk_6_relu_Relu_output_0 = self.relu7(x2paddle__trunk_trunk_6_conv_Conv_output_0)
        x2paddle__trunk_trunk_7_conv_Conv_output_0 = self.conv8(x2paddle__trunk_trunk_6_relu_Relu_output_0)
        x2paddle__trunk_trunk_7_relu_Relu_output_0 = self.relu8(x2paddle__trunk_trunk_7_conv_Conv_output_0)
        x2paddle__trunk_trunk_8_conv_Conv_output_0 = self.conv9(x2paddle__trunk_trunk_7_relu_Relu_output_0)
        x2paddle__trunk_trunk_8_relu_Relu_output_0 = self.relu9(x2paddle__trunk_trunk_8_conv_Conv_output_0)
        x2paddle__trunk_trunk_9_conv_Conv_output_0 = self.conv10(x2paddle__trunk_trunk_8_relu_Relu_output_0)
        x2paddle__trunk_trunk_9_relu_Relu_output_0 = self.relu10(x2paddle__trunk_trunk_9_conv_Conv_output_0)
        x2paddle__trunk_trunk_10_conv_Conv_output_0 = self.conv11(x2paddle__trunk_trunk_9_relu_Relu_output_0)
        x2paddle__trunk_trunk_10_relu_Relu_output_0 = self.relu11(x2paddle__trunk_trunk_10_conv_Conv_output_0)
        x2paddle__trunk_trunk_11_conv_Conv_output_0 = self.conv12(x2paddle__trunk_trunk_10_relu_Relu_output_0)
        x2paddle__trunk_trunk_11_relu_Relu_output_0 = self.relu12(x2paddle__trunk_trunk_11_conv_Conv_output_0)
        x2paddle__trunk_trunk_12_conv_Conv_output_0 = self.conv13(x2paddle__trunk_trunk_11_relu_Relu_output_0)
        x2paddle__trunk_trunk_12_relu_Relu_output_0 = self.relu13(x2paddle__trunk_trunk_12_conv_Conv_output_0)
        x2paddle__trunk_trunk_13_conv_Conv_output_0 = self.conv14(x2paddle__trunk_trunk_12_relu_Relu_output_0)
        x2paddle__trunk_trunk_13_relu_Relu_output_0 = self.relu14(x2paddle__trunk_trunk_13_conv_Conv_output_0)
        x2paddle__trunk_trunk_14_conv_Conv_output_0 = self.conv15(x2paddle__trunk_trunk_13_relu_Relu_output_0)
        x2paddle__trunk_trunk_14_relu_Relu_output_0 = self.relu15(x2paddle__trunk_trunk_14_conv_Conv_output_0)
        x2paddle__trunk_trunk_15_conv_Conv_output_0 = self.conv16(x2paddle__trunk_trunk_14_relu_Relu_output_0)
        x2paddle__trunk_trunk_15_relu_Relu_output_0 = self.relu16(x2paddle__trunk_trunk_15_conv_Conv_output_0)
        x2paddle__trunk_trunk_16_conv_Conv_output_0 = self.conv17(x2paddle__trunk_trunk_15_relu_Relu_output_0)
        x2paddle__trunk_trunk_16_relu_Relu_output_0 = self.relu17(x2paddle__trunk_trunk_16_conv_Conv_output_0)
        x2paddle__trunk_trunk_17_conv_Conv_output_0 = self.conv18(x2paddle__trunk_trunk_16_relu_Relu_output_0)
        x2paddle__trunk_trunk_17_relu_Relu_output_0 = self.relu18(x2paddle__trunk_trunk_17_conv_Conv_output_0)
        x2paddle__conv2_Conv_output_0 = self.conv19(x2paddle__trunk_trunk_17_relu_Relu_output_0)
        x2paddle_output = paddle.add(x=x2paddle__conv2_Conv_output_0, y=x2paddle_input)
        return x2paddle_output

def main(x2paddle_input):
    # There are 1 inputs.
    # x2paddle_input: shape-[1, 1, 504, 504], type-float32.
    paddle.disable_static()
    params = paddle.load(r'D:\PycharmCode\SR\VDSR-PyTorch-master\VDSR-PyTorch-master\pd_model\model.pdparams')
    model = ONNXModel()
    model.set_dict(params, use_structured_name=True)
    model.eval()
    out = model(x2paddle_input)
    return out
